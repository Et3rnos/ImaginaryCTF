@page
@model iCTF_Website.Pages.ChallengesModel

@using Westwind.AspNetCore.Markdown
@using Microsoft.EntityFrameworkCore
@using iCTF_Shared_Resources.Managers
@using Microsoft.Extensions.Configuration

@inject SignInManager<ApplicationUser> signInManager
@inject UserManager<ApplicationUser> userManager
@inject DatabaseContext context
@inject IConfiguration configuration

@{
    ViewData["Title"] = "Challenges";
}

@{
    var dynamicScoring = configuration.GetValue<bool>("DynamicScoring");

    var categories = new List<string>();
    List<ChallengeInfo> challengeInfos = new List<ChallengeInfo>();
    List<ChallengeInfo> solvedChallengeInfos = new List<ChallengeInfo>();
    if (!signInManager.IsSignedIn(User))
    {
        challengeInfos = await context.Challenges.Where(x => x.State == 2).OrderByDescending(x => x.ReleaseDate).Select(x => new ChallengeInfo { Challenge = x, SolvesCount = x.Solves.Count }).ToListAsync();
        categories = challengeInfos.Select(x => x.Challenge.Category).Distinct().ToList();
    }
    else
    {
        var appUser = await userManager.GetUserAsync(User);
        await context.Entry(appUser).Reference(x => x.User).Query().Include(x => x.Team).LoadAsync();

        SharedStatsManager.Stats stats;
        if (appUser.User.Team == null)
        {
            stats = await SharedStatsManager.GetStats(context, appUser.User, dynamicScoring);
        }
        else
        {
            stats = await SharedStatsManager.GetTeamStats(context, appUser.User.Team, dynamicScoring);
        }
        challengeInfos = stats.UnsolvedChallenges;
        solvedChallengeInfos = stats.SolvedChallenges;
        categories = challengeInfos.Union(solvedChallengeInfos).Select(x => x.Challenge.Category).Distinct().ToList();
    }

}

<div class="container">
    <h1 class="text-center m-3">Challenges</h1>
    <div>
        <!--
        Already here for ImaginaryCTF 2022
        <div class="alert alert-warning">
            Because we will be running ImaginaryCTF 2022 from July 23 to July 27 no challenges will be released during those days. We encourage anyone that still wants to solve challenges during this time to join <a href="https://2022.imaginaryctf.org" target="_blank" class="text-decoration-none cool-link">ImaginaryCTF 2022</a> for 42+ additional challenges.
        </div>
        -->
    </div>
    <div class="row">
        <div class="col-md-6 offset-md-3">
            <form method="post">
                <div class="input-group mb-3">
                    <input name="flag" type="text" class="form-control" placeholder="ictf{s0m3_1337_f14g}">
                    <div class="input-group-append">
                        <button class="btn btn-outline-success" type="submit">Submit Flag</button>
                    </div>
                </div>
            </form>
        </div>
        @if (!string.IsNullOrEmpty(Model.Success))
        {
            <div>
                <div class="alert alert-success">
                    @Model.Success
                </div>
            </div>
        }
        @if (!string.IsNullOrEmpty(Model.Error))
        {
            <div>
                <div class="alert alert-danger">
                    @Model.Error
                </div>
            </div>
        }
        @if (challengeInfos.Count == 0 && solvedChallengeInfos.Count == 0)
        {
            <p>Looks like no challenges have been released during this round yet :'(</p>
        }
        @foreach (string category in categories)
        {
            <h3 class="text-start">@category</h3>
            <hr />
            @foreach (var challengeInfo in challengeInfos.Where(x => x.Challenge.Category == category))
            {
                var challenge = challengeInfo.Challenge;
                <div class="col-md-6 col-lg-4 mb-3">
                    <div class="card challenge">
                        <div class="card-header challenge-header fw-bold">
                            @challenge.Title (@(dynamicScoring ? DynamicScoringManager.GetPointsFromSolvesCount(challengeInfo.SolvesCount) : challenge.Points)pts) - @challenge.ReleaseDate.ToString("dd/MM")
                        </div>
                        <div class="card-body">
                            <a class="text-decoration-none view-challenge-btn py-1 px-4" data-bs-toggle="modal" data-bs-target="#challenge-modal-@(challenge.Id)" href="#">
                                <i class="fas fa-caret-right"></i> VIEW CHALLENGE <i class="fas fa-caret-left"></i>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="modal fade" id="challenge-modal-@(challenge.Id)">
                    <div class="modal-dialog modal-dialog-centered modal-lg">
                        <div class="modal-content text-dark">
                            <div class="modal-header">
                                <h5 class="modal-title text-center w-100">@challenge.Title (@(dynamicScoring ? DynamicScoringManager.GetPointsFromSolvesCount(challengeInfo.SolvesCount) : challenge.Points)pts) <span class="d-inline-block">- @challengeInfo.SolvesCount solves</span><br /><small class="text-muted">by @challenge.Author</small></h5>
                            </div>
                            <div class="modal-body pb-0">
                                <b>Description</b>
                                @Markdown.ParseHtmlString(challenge.Description)
                                <b>Attachments</b>
                                @Markdown.ParseHtmlString(challenge.Attachments)
                            </div>
                            <div class="modal-footer">
                                <div class="text-center w-100">
                                    <button type="button" class="btn btn-secondary w-50" data-bs-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            @foreach (var challengeInfo in solvedChallengeInfos.Where(x => x.Challenge.Category == category))
            {
                var challenge = challengeInfo.Challenge;
                <div class="col-md-6 col-lg-4 mb-3">
                    <div class="card challenge-solved">
                        <div class="card-header challenge-solved-header fw-bold">
                            @challenge.Title (@(dynamicScoring ? DynamicScoringManager.GetPointsFromSolvesCount(challengeInfo.SolvesCount) : challenge.Points)pts) - @challenge.ReleaseDate.ToString("dd/MM") <i class="fas fa-check"></i>
                        </div>
                        <div class="card-body">
                            <a class="text-decoration-none view-challenge-solved-btn py-1 px-4" data-bs-toggle="modal" data-bs-target="#challenge-modal-@(challenge.Id)" href="#">
                                <i class="fas fa-caret-right"></i> VIEW CHALLENGE <i class="fas fa-caret-left"></i>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="modal fade" id="challenge-modal-@(challenge.Id)">
                    <div class="modal-dialog modal-dialog-centered modal-lg">
                        <div class="modal-content text-dark">
                            <div class="modal-header">
                                <h5 class="modal-title text-center w-100">@challenge.Title (@(dynamicScoring ? DynamicScoringManager.GetPointsFromSolvesCount(challengeInfo.SolvesCount) : challenge.Points)pts) <span class="d-inline-block">- @challengeInfo.SolvesCount solves</span><br /><small class="text-muted">by @challenge.Author</small></h5>
                            </div>
                            <div class="modal-body pb-0">
                                <b>Description</b>
                                @Markdown.ParseHtmlString(challenge.Description)
                                <b>Attachments</b>
                                @Markdown.ParseHtmlString(challenge.Attachments)
                            </div>
                            <div class="modal-footer">
                                <div class="text-center w-100">
                                    <button type="button" class="btn btn-secondary w-50" data-bs-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>